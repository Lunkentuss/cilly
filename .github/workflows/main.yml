name: Main CI
on: [push]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: cachix/install-nix-action@v25
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: nix develop --command bash -c 'cabal test'
  build-executable:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: cachix/install-nix-action@v25
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          nix build
          mkdir dist
          cp result/bin/cilly dist
      - name: Set binary os name
        uses: allenevans/set-env@v2.2.0
        with:
          BINARY_OS: ${{ runner.os }}
      - uses: actions/upload-artifact@v4
        with:
          name: cilly-${{ env.BINARY_OS }}-x86_64
          path: dist/cilly
  build-and-push-cilly-helper:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: cachix/install-nix-action@v25
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: "system-features = benchmark big-parallel nixos-test uid-range kvm"
      - run: |
          RELEASE_VERSION=$(sed -E 's|^refs/tags/v||' <<< ${{ github.ref }})
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
      - run: |
          nix shell .#ci --command bash -c '
          export REGISTRY_USER="${{ secrets.DOCKERHUB_USERNAME }}"
          export REGISTRY_PASSWORD="${{ secrets.DOCKERHUB_TOKEN }}"
          ./ci/build-nix-container \
            .#cilly-helper-container \
            docker.io/lunkentuss/cilly-helper:$RELEASE_VERSION
          '
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [unit-tests, build-executable, build-and-push-cilly-helper]
    steps:
      - run: |
          RELEASE_VERSION=$(sed -E 's|^refs/tags/v||' <<< ${{ github.ref }})
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
      - uses: actions/download-artifact@v4
        with:
          name: cilly-Linux-x86_64
          path: artifacts/cilly-linux-x86_64
      - run: |
          mv artifacts/cilly-linux-x86_64/cilly cilly-linux-x86_64
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            cilly-linux-x86_64
